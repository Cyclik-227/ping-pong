import pygame
from pygame import *
pygame.init()
mixer.init()

player_speed = 25
ball_speed_x = 6
ball_speed_y = 5
win_width = 1500
win_height = 700
FPS = 40
game = True
clock = time.Clock()

window = display.set_mode((win_width, win_height))
display.set_caption('Пинг Понг')

mixer.music.load('.ogg')
mixer.music.play()
kick0 = mixer.Sound('.ogg')

background = transform.scale(image.load('tenis.jpg'), (win_width, win_height))

font = font.SysFont('Arial', 60) 

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):  
        super().__init__()
        self.image = transform.scale(image.load(player_image), (size_x, size_y))  
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
        
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update(self):
        keys_press = key.get_pressed()
        if keys_press[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys_press[K_s] and self.rect.y < win_height - self.rect.height - 5:
            self.rect.y += self.speed

class Player2(GameSprite):
    def update(self):
        keys_press = key.get_pressed()
        if keys_press[K_t] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys_press[K_g] and self.rect.y < win_height - self.rect.height - 5:
            self.rect.y += self.speed

class Ball(GameSprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        super().__init__(player_image, player_x, player_y, size_x, size_y, player_speed)
        self.speed_x = ball_speed_x
        self.speed_y = ball_speed_y
        self.hit_count = 0 

    def update(self):
        self.rect.x += self.speed_x
        self.rect.y += self.speed_y

        if self.rect.top <= 0 or self.rect.bottom >= win_height:
            self.speed_y *= -1  

        if sprite.collide_rect(self, raketka1) or sprite.collide_rect(self, raketka2):
            self.speed_x *= -1 
            self.hit_count += 1 
            kick0.play()

            if self.hit_count >= 3:
                if self.speed_x > 0:
                    direction_x = 1 
                else:
                     direction_x = -1 

                if self.speed_y > 0:
                    direction_y = 1
                else:
                     direction_y = -1  

                self.speed_x += 2 * direction_x 
                self.speed_y += 2 * direction_y 
                self.hit_count = 0 

        if self.rect.left <= 0:
            return 'right' 
        if self.rect.right >= win_width: 
            return 'left'
        return None 

raketka1 = Player('untitled2.png', 50, 300, 100, 170, player_speed)
raketka2 = Player2('untitled3.png', 1350, 300, 100, 170, player_speed)
ball = Ball('мяч.jpg', 500, 250, 70, 70, player_speed) 

game_over = False

while game:
    for e in event.get():
        if e.type == QUIT:
            game = False

    window.blit(background, (0, 0))

    raketka1.update()
    raketka1.reset()
    raketka2.update()
    raketka2.reset()
    
    result = ball.update()
    if result == 'left':
        text = font.render('Правая ракетка проиграла', True, (0, 0, 0))
        window.blit(text, (230, 300))
        display.update()
        pygame.time.delay(2000) 
        game_over = True
    elif result == 'right':
        text = font.render('Левая ракетка проиграла', True, (0, 0, 0))
        window.blit(text, (230, 300))
        display.update()
        pygame.time.delay(2000)
        game_over = True

    ball.reset()

    display.update()
    clock.tick(FPS)

    if game_over:
        break

pygame.quit()
